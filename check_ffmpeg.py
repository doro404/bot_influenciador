#!/usr/bin/env python3
"""
Script para verificar se o ffmpeg e as bibliotecas de v√≠deo est√£o instalados corretamente
"""

import subprocess
import sys

def check_ffmpeg():
    """Verifica se o ffmpeg est√° instalado"""
    try:
        result = subprocess.run(['ffmpeg', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ ffmpeg est√° instalado e funcionando")
            # Mostrar vers√£o
            version_line = result.stdout.split('\n')[0]
            print(f"   Vers√£o: {version_line}")
            return True
        else:
            print("‚ùå ffmpeg n√£o est√° funcionando corretamente")
            return False
    except FileNotFoundError:
        print("‚ùå ffmpeg n√£o est√° instalado")
        return False
    except Exception as e:
        print(f"‚ùå Erro ao verificar ffmpeg: {e}")
        return False

def check_python_libs():
    """Verifica se as bibliotecas Python est√£o instaladas"""
    libs_to_check = [
        ('cv2', 'OpenCV'),
        ('moviepy', 'MoviePy'),
        ('numpy', 'NumPy')
    ]
    
    all_ok = True
    for lib_name, display_name in libs_to_check:
        try:
            __import__(lib_name)
            print(f"‚úÖ {display_name} est√° instalado")
        except ImportError as e:
            print(f"‚ùå {display_name} n√£o est√° instalado: {e}")
            all_ok = False
    
    return all_ok

def test_moviepy_import():
    """Testa se o MoviePy consegue importar corretamente"""
    try:
        from moviepy.editor import VideoFileClip
        print("‚úÖ MoviePy consegue importar VideoFileClip")
        return True
    except ImportError as e:
        print(f"‚ùå Erro ao importar MoviePy: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado com MoviePy: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîç Verificando instala√ß√£o do ffmpeg e bibliotecas de v√≠deo")
    print("=" * 60)
    
    # Verificar ffmpeg
    ffmpeg_ok = check_ffmpeg()
    
    print("\n" + "-" * 40)
    
    # Verificar bibliotecas Python
    libs_ok = check_python_libs()
    
    print("\n" + "-" * 40)
    
    # Testar MoviePy
    moviepy_ok = test_moviepy_import()
    
    print("\n" + "=" * 60)
    print("üìä RESUMO:")
    
    if ffmpeg_ok and libs_ok and moviepy_ok:
        print("üéâ Tudo est√° funcionando corretamente!")
        print("‚úÖ Convers√£o de v√≠deo para video note deve funcionar")
    else:
        print("‚ö†Ô∏è  Alguns componentes n√£o est√£o funcionando:")
        if not ffmpeg_ok:
            print("   - ffmpeg precisa ser instalado")
        if not libs_ok:
            print("   - Bibliotecas Python precisam ser instaladas")
        if not moviepy_ok:
            print("   - MoviePy tem problemas de importa√ß√£o")
        
        print("\nüîß SOLU√á√ïES:")
        print("1. Instale o ffmpeg no sistema")
        print("2. Execute: pip install -r requirements.txt")
        print("3. Para Railway, use o arquivo nixpacks.toml criado")

if __name__ == "__main__":
    main() 